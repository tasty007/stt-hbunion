server.context-path=/contractserver
#server.port=8220
#Nginx访问端口改成8222
server.port=8222

server.tomcat.uri-encoding=UTF-8
server.session.timeout = 8000000
spring.mvc.view.prefix: /WEB-INF/pages/
spring.mvc.view.suffix: .jsp
server.jsp-servlet.init-parameters.development=true
#智能合约的基本gas消耗
contract.base.gas=0.0006
#每行虚拟命令要消耗的gas
contract.run.gas=0.0000001
#查询方法模拟消耗的gas
contract.query.gas=0.01
#区块起始块
contract.update.startIndex=680

#block.update.ips=233



# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=123456
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=2000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=6000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=300
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=100
# 连接超时时间（毫秒）
spring.redis.timeout=30000


# mysql使用druid数据库连接池
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver 	#mysql-connector5.1.49之前不存在cj包
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
#spring.datasource.url = jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf-8
#spring.datasource.url = jdbc:mysql://localhost:3306/demo?serverTimezone=UTC&autoReconnect=true&useUnicode=true&characterEncoding=UTF-8
spring.datasource.url =jdbc:mysql://localhost:3306/hbunion?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone = GMT
spring.datasource.username = root
spring.datasource.password = fjsfdx123!@#QWEasdzxc

spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
#阿里巴巴连接池配置
#最大连接池数量
spring.datasource.max-active=20 
#最小连接池数量
spring.datasource.min-idle=8 
#获取连接时最大等待时间
spring.datasource.maxWait=60000
#初始化时建立连接的个数
spring.datasource.initialSize=5
#申请连接时执行ValidationQuery检测连接是否有效，建议为false，因为做了这个配置会降低性能；若下面那行括号为null则这一行怎么写都不生效
spring.datasource.testOnBorrow=false
#用来检测连接是否有效的sql，要求是一个查询语句
spring.datasource.validationQuery="SELECT 1"
#建议配置为true，不影响性能且保证安全性；作用是在ValidationQuery上加个条件：当空闲时间大于timeBetweenEvictionRunsMillis时才执行连接检测
spring.datasource.testWhileIdle=true
#是否缓存preparedStatement
spring.datasource.poolPreparedStatements=true
#spring.datasource.serverTimezone=UTC
#使用root账户登陆没问题，使用普通账户会提示Public Key Retrieval错误
spring.datasource.allowPublicKeyRetrieval=true \t
spring.datasource.useSSL=false



